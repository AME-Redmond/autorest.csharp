// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace AppConfiguration.Models
{
    public partial class KeyListResult
    {
        internal static KeyListResult DeserializeKeyListResult(JsonElement element)
        {
            IReadOnlyList<Key> items = default;
            string nextLink = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("items"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        items = null;
                    }
                    else
                    {
                        List<Key> array = new List<Key>();
                        foreach (var item in property.Value.EnumerateArray())
                        {
                            if (item.ValueKind == JsonValueKind.Null)
                            {
                                array.Add(null);
                            }
                            else
                            {
                                array.Add(Key.DeserializeKey(item));
                            }
                        }
                        items = array;
                    }
                    continue;
                }
                if (property.NameEquals("@nextLink"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nextLink = null;
                    }
                    else
                    {
                        nextLink = property.Value.GetString();
                    }
                    continue;
                }
            }
            return new KeyListResult(items, nextLink);
        }
    }
}
