// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Network.Management.Interface.Models
{
    public partial class ApplicationGatewayUrlPathMapPropertiesFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (DefaultBackendAddressPool != null)
            {
                writer.WritePropertyName("defaultBackendAddressPool");
                writer.WriteObjectValue(DefaultBackendAddressPool);
            }
            if (DefaultBackendHttpSettings != null)
            {
                writer.WritePropertyName("defaultBackendHttpSettings");
                writer.WriteObjectValue(DefaultBackendHttpSettings);
            }
            if (DefaultRewriteRuleSet != null)
            {
                writer.WritePropertyName("defaultRewriteRuleSet");
                writer.WriteObjectValue(DefaultRewriteRuleSet);
            }
            if (DefaultRedirectConfiguration != null)
            {
                writer.WritePropertyName("defaultRedirectConfiguration");
                writer.WriteObjectValue(DefaultRedirectConfiguration);
            }
            if (PathRules != null)
            {
                writer.WritePropertyName("pathRules");
                writer.WriteStartArray();
                foreach (var item in PathRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (ProvisioningState != null)
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            writer.WriteEndObject();
        }
        internal static ApplicationGatewayUrlPathMapPropertiesFormat DeserializeApplicationGatewayUrlPathMapPropertiesFormat(JsonElement element)
        {
            ApplicationGatewayUrlPathMapPropertiesFormat result = new ApplicationGatewayUrlPathMapPropertiesFormat();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("defaultBackendAddressPool"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DefaultBackendAddressPool = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("defaultBackendHttpSettings"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DefaultBackendHttpSettings = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("defaultRewriteRuleSet"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DefaultRewriteRuleSet = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("defaultRedirectConfiguration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DefaultRedirectConfiguration = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("pathRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.PathRules = new List<ApplicationGatewayPathRule>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.PathRules.Add(ApplicationGatewayPathRule.DeserializeApplicationGatewayPathRule(item));
                    }
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ProvisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return result;
        }
    }
}
