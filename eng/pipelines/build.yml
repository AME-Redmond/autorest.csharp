trigger:
  branches:
    include:
    - feature/*

pr:
  branches:
    include:
    - feature/*

jobs:
  - job: Build
    variables:
      DotNetCoreSDKVersion: 3.0.100
      ProjectDirectory: src/AutoRest.CSharp.V3/
    pool:
      vmImage: windows-2019
    steps:
      - task: DotNetCoreInstaller@2
        displayName: "Use .NET Core sdk $(DotNetCoreSDKVersion)"
        inputs:
          version: "$(DotNetCoreSDKVersion)"
      - script: |
          npm install
        displayName: "Install packages"
      - script: |
          dotnet build AutoRest.CSharp.V3.sln
        displayName: "Build"
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          DOTNET_MULTILEVEL_LOOKUP: 0
#      - pwsh: ./eng/CodeChecks.ps1
#        displayName: "Check if code is up-to-date"
#      - script: |
#          dotnet test AutoRest.CSharp.V3.sln
#        displayName: "Test"
#        env:
#          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
#          DOTNET_CLI_TELEMETRY_OPTOUT: 1
#          DOTNET_MULTILEVEL_LOOKUP: 0
      - task: PublishPipelineArtifact@1
        condition: succeeded()
        inputs:
          artifactName: packages
          path: $(Build.ArtifactStagingDirectory)
      - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
        - pwsh: ./eng/PublishRelease.ps1 -WorkingDirectory ./artifacts/bin/AutoRest.CSharp.V3/Debug/netcoreapp3.0/ -Token $(Github-azuresdkci-personalaccesstoken) -Artifacts $(Build.ArtifactStagingDirectory) -BuildNumber $(Build.BuildNumber) -Sha $(Build.SourceBranchName)
          condition: succeeded()
          displayName: 'Publish to GitHub'
