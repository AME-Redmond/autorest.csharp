// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace paging.Models
{
    public partial class ProductResultValue
    {
        internal static ProductResultValue DeserializeProductResultValue(JsonElement element)
        {
            IReadOnlyList<Product> value = default;
            string nextLink = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        value = null;
                    }
                    else
                    {
                        List<Product> array = new List<Product>();
                        foreach (var item in property.Value.EnumerateArray())
                        {
                            if (item.ValueKind == JsonValueKind.Null)
                            {
                                array.Add(null);
                            }
                            else
                            {
                                array.Add(Product.DeserializeProduct(item));
                            }
                        }
                        value = array;
                    }
                    continue;
                }
                if (property.NameEquals("nextLink"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nextLink = null;
                    }
                    else
                    {
                        nextLink = property.Value.GetString();
                    }
                    continue;
                }
            }
            return new ProductResultValue(value, nextLink);
        }
    }
}
