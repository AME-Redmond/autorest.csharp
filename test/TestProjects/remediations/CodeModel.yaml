!<!CodeModel> 
info: !<!Info> 
  title: RemediationsClient
schemas: !<!Schemas> 
  numbers:
    - !<!NumberSchema> &ref_1
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      minimum: 0
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_33
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: The number of deployments required by the remediation.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_34
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: The number of deployments required by the remediation that have succeeded.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_35
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: The number of deployments required by the remediation that have failed.
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_3
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_8
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentRemediatedResourceId
          description: Resource ID of the resource that is being remediated by the deployment.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_9
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentId
          description: Resource ID of the template deployment that will remediate the resource.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_10
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentStatus
          description: Status of the remediation deployment.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_11
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentResourceLocation
          description: Location of the resource that is being remediated.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_12
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: ErrorDefinitionCode
          description: Service specific error code which serves as the substatus for the HTTP error code.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_13
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: ErrorDefinitionMessage
          description: Description of the error.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_14
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: ErrorDefinitionTarget
          description: The target of the error.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_16
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: TypedErrorInfoType
          description: The type of included error details.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_20
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentsListResultNextLink
          description: The URL to get the next set of results.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_26
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationPropertiesPolicyAssignmentId
          description: The resource ID of the policy assignment that should be remediated.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_27
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationPropertiesPolicyDefinitionReferenceId
          description: The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_29
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationPropertiesProvisioningState
          description: The status of the remediation.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_32
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationFiltersLocationsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_23
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationId
          description: The ID of the remediation.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_24
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationType
          description: The type of the remediation.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_25
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationName
          description: The name of the remediation.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_39
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationListResultNextLink
          description: The URL to get the next set of results.
      protocol: !<!Protocols> {}
  choices:
    - !<!ChoiceSchema> &ref_28
      choices:
        - !<!ChoiceValue> 
          value: ExistingNonCompliant
          language:
            default:
              name: ExistingNonCompliant
              description: Remediate resources that are already known to be non-compliant.
        - !<!ChoiceValue> 
          value: ReEvaluateCompliance
          language:
            default:
              name: ReEvaluateCompliance
              description: Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant.
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: ResourceDiscoveryMode
          description: The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_47
      type: constant
      value: !<!ConstantValue> 
        value: Microsoft.Management
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Constant1
          description: ''
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_45
      type: constant
      value: !<!ConstantValue> 
        value: '2019-07-01'
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApiVersion20190701
          description: Api Version (2019-07-01)
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_50
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_62
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
  any:
    - !<!AnySchema> &ref_17
      type: any
      language: !<!Languages> 
        default:
          name: any
          description: Any object
      protocol: !<!Protocols> {}
  dateTimes:
    - !<!DateTimeSchema> &ref_18
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentCreatedOn
          description: The time at which the remediation was created.
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_19
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationDeploymentLastUpdatedOn
          description: The time at which the remediation deployment was last updated.
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_30
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationPropertiesCreatedOn
          description: The time at which the remediation was created.
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_31
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      language: !<!Languages> 
        default:
          name: RemediationPropertiesLastUpdatedOn
          description: The time at which the remediation was last updated.
      protocol: !<!Protocols> {}
  groups:
    - !<!GroupSchema> &ref_2
      type: group
      properties:
        - !<!GroupProperty> 
          schema: *ref_1
          originalParameter:
            - !<!Parameter> &ref_48
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_51
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_58
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_4
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_71
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_72
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_75
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_5
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_81
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_82
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_87
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_6
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_97
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_98
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_103
              schema: *ref_1
              groupedBy: !<!Parameter> &ref_7
                schema: *ref_2
                implementation: Method
                language: !<!Languages> 
                  default:
                    name: queryOptions
                    description: Parameter group
                protocol: !<!Protocols> {}
              implementation: Method
              language: !<!Languages> 
                default:
                  name: top
                  description: Maximum number of records to return.
                  serializedName: $top
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: Top
          language: !<!Languages> 
            default:
              name: top
              description: Maximum number of records to return.
          protocol: !<!Protocols> {}
        - !<!GroupProperty> 
          schema: *ref_3
          originalParameter:
            - !<!Parameter> &ref_59
              schema: *ref_3
              groupedBy: *ref_4
              implementation: Method
              language: !<!Languages> 
                default:
                  name: filter
                  description: OData filter expression.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_76
              schema: *ref_3
              groupedBy: *ref_5
              implementation: Method
              language: !<!Languages> 
                default:
                  name: filter
                  description: OData filter expression.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_88
              schema: *ref_3
              groupedBy: *ref_6
              implementation: Method
              language: !<!Languages> 
                default:
                  name: filter
                  description: OData filter expression.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
            - !<!Parameter> &ref_104
              schema: *ref_3
              groupedBy: *ref_7
              implementation: Method
              language: !<!Languages> 
                default:
                  name: filter
                  description: OData filter expression.
                  serializedName: $filter
              protocol: !<!Protocols> 
                http: !<!HttpParameter> 
                  in: query
          serializedName: Filter
          language: !<!Languages> 
            default:
              name: filter
              description: OData filter expression.
          protocol: !<!Protocols> {}
      usage:
        - input
      language: !<!Languages> 
        default:
          name: QueryOptions
          description: Parameter group
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_54
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_42
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-07-01'
            elementType: !<!ObjectSchema> &ref_21
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2019-07-01'
              properties:
                - !<!Property> 
                  schema: *ref_8
                  readOnly: true
                  serializedName: remediatedResourceId
                  language: !<!Languages> 
                    default:
                      name: remediatedResourceId
                      description: Resource ID of the resource that is being remediated by the deployment.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_9
                  readOnly: true
                  serializedName: deploymentId
                  language: !<!Languages> 
                    default:
                      name: deploymentId
                      description: Resource ID of the template deployment that will remediate the resource.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_10
                  readOnly: true
                  serializedName: status
                  language: !<!Languages> 
                    default:
                      name: status
                      description: Status of the remediation deployment.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_11
                  readOnly: true
                  serializedName: resourceLocation
                  language: !<!Languages> 
                    default:
                      name: resourceLocation
                      description: Location of the resource that is being remediated.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_15
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '2019-07-01'
                    properties:
                      - !<!Property> 
                        schema: *ref_12
                        readOnly: true
                        serializedName: code
                        language: !<!Languages> 
                          default:
                            name: code
                            description: Service specific error code which serves as the substatus for the HTTP error code.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_13
                        readOnly: true
                        serializedName: message
                        language: !<!Languages> 
                          default:
                            name: message
                            description: Description of the error.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_14
                        readOnly: true
                        serializedName: target
                        language: !<!Languages> 
                          default:
                            name: target
                            description: The target of the error.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: !<!ArraySchema> &ref_40
                          type: array
                          apiVersions:
                            - !<!ApiVersion> 
                              version: '2019-07-01'
                          elementType: *ref_15
                          language: !<!Languages> 
                            default:
                              name: ErrorDefinitionDetails
                              description: Internal error details.
                          protocol: !<!Protocols> {}
                        readOnly: true
                        serializedName: details
                        language: !<!Languages> 
                          default:
                            name: details
                            description: Internal error details.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: !<!ArraySchema> &ref_41
                          type: array
                          apiVersions:
                            - !<!ApiVersion> 
                              version: '2019-07-01'
                          elementType: !<!ObjectSchema> &ref_22
                            type: object
                            apiVersions:
                              - !<!ApiVersion> 
                                version: '2019-07-01'
                            properties:
                              - !<!Property> 
                                schema: *ref_16
                                readOnly: true
                                serializedName: type
                                language: !<!Languages> 
                                  default:
                                    name: type
                                    description: The type of included error details.
                                protocol: !<!Protocols> {}
                              - !<!Property> 
                                schema: *ref_17
                                readOnly: true
                                serializedName: info
                                language: !<!Languages> 
                                  default:
                                    name: info
                                    description: The scenario specific error details.
                                protocol: !<!Protocols> {}
                            serializationFormats:
                              - json
                            usage:
                              - output
                              - exception
                            language: !<!Languages> 
                              default:
                                name: TypedErrorInfo
                                description: Scenario specific error details.
                                namespace: ''
                            protocol: !<!Protocols> {}
                          language: !<!Languages> 
                            default:
                              name: ErrorDefinitionAdditionalInfo
                              description: Additional scenario specific error details.
                          protocol: !<!Protocols> {}
                        readOnly: true
                        serializedName: additionalInfo
                        language: !<!Languages> 
                          default:
                            name: additionalInfo
                            description: Additional scenario specific error details.
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                      - exception
                    language: !<!Languages> 
                      default:
                        name: ErrorDefinition
                        description: Error definition.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  readOnly: true
                  serializedName: error
                  language: !<!Languages> 
                    default:
                      name: error
                      description: Error encountered while remediated the resource.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_18
                  readOnly: true
                  serializedName: createdOn
                  language: !<!Languages> 
                    default:
                      name: createdOn
                      description: The time at which the remediation was created.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_19
                  readOnly: true
                  serializedName: lastUpdatedOn
                  language: !<!Languages> 
                    default:
                      name: lastUpdatedOn
                      description: The time at which the remediation deployment was last updated.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: RemediationDeployment
                  description: Details of a single deployment created by the remediation.
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: RemediationDeploymentsListResultValue
                description: Array of deployments for the remediation.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: Array of deployments for the remediation.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_20
          readOnly: true
          serializedName: nextLink
          language: !<!Languages> 
            default:
              name: nextLink
              description: The URL to get the next set of results.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: RemediationDeploymentsListResult
          description: List of deployments for a remediation.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_21
    - *ref_15
    - *ref_22
    - !<!ObjectSchema> &ref_55
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      properties:
        - !<!Property> 
          schema: *ref_15
          serializedName: error
          language: !<!Languages> 
            default:
              name: error
              description: The error details.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - exception
      language: !<!Languages> 
        default:
          name: ErrorResponse
          description: Error response.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_38
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      properties:
        - !<!Property> 
          schema: *ref_23
          readOnly: true
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: The ID of the remediation.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_24
          readOnly: true
          serializedName: type
          language: !<!Languages> 
            default:
              name: type
              description: The type of the remediation.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_25
          readOnly: true
          serializedName: name
          language: !<!Languages> 
            default:
              name: name
              description: The name of the remediation.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_26
          flattenedNames:
            - properties
            - policyAssignmentId
          serializedName: policyAssignmentId
          language: !<!Languages> 
            default:
              name: policyAssignmentId
              description: The resource ID of the policy assignment that should be remediated.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_27
          flattenedNames:
            - properties
            - policyDefinitionReferenceId
          serializedName: policyDefinitionReferenceId
          language: !<!Languages> 
            default:
              name: policyDefinitionReferenceId
              description: The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_28
          flattenedNames:
            - properties
            - resourceDiscoveryMode
          serializedName: resourceDiscoveryMode
          language: !<!Languages> 
            default:
              name: resourceDiscoveryMode
              description: The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_29
          flattenedNames:
            - properties
            - provisioningState
          readOnly: true
          serializedName: provisioningState
          language: !<!Languages> 
            default:
              name: provisioningState
              description: The status of the remediation.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_30
          flattenedNames:
            - properties
            - createdOn
          readOnly: true
          serializedName: createdOn
          language: !<!Languages> 
            default:
              name: createdOn
              description: The time at which the remediation was created.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_31
          flattenedNames:
            - properties
            - lastUpdatedOn
          readOnly: true
          serializedName: lastUpdatedOn
          language: !<!Languages> 
            default:
              name: lastUpdatedOn
              description: The time at which the remediation was last updated.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_36
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-07-01'
            properties:
              - !<!Property> 
                schema: !<!ArraySchema> &ref_43
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2019-07-01'
                  elementType: *ref_32
                  language: !<!Languages> 
                    default:
                      name: RemediationFiltersLocations
                      description: The resource locations that will be remediated.
                  protocol: !<!Protocols> {}
                serializedName: locations
                language: !<!Languages> 
                  default:
                    name: locations
                    description: The resource locations that will be remediated.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
              - input
            language: !<!Languages> 
              default:
                name: RemediationFilters
                description: The filters that will be applied to determine which resources to remediate.
                namespace: ''
            protocol: !<!Protocols> {}
          flattenedNames:
            - properties
            - filters
          serializedName: filters
          language: !<!Languages> 
            default:
              name: filters
              description: The filters that will be applied to determine which resources to remediate.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_37
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-07-01'
            properties:
              - !<!Property> 
                schema: *ref_33
                readOnly: true
                serializedName: totalDeployments
                language: !<!Languages> 
                  default:
                    name: totalDeployments
                    description: The number of deployments required by the remediation.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_34
                readOnly: true
                serializedName: successfulDeployments
                language: !<!Languages> 
                  default:
                    name: successfulDeployments
                    description: The number of deployments required by the remediation that have succeeded.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_35
                readOnly: true
                serializedName: failedDeployments
                language: !<!Languages> 
                  default:
                    name: failedDeployments
                    description: The number of deployments required by the remediation that have failed.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
              - input
            language: !<!Languages> 
              default:
                name: RemediationDeploymentSummary
                description: The deployment status summary for all deployments created by the remediation.
                namespace: ''
            protocol: !<!Protocols> {}
          flattenedNames:
            - properties
            - deploymentStatus
          readOnly: true
          serializedName: deploymentStatus
          language: !<!Languages> 
            default:
              name: deploymentStatus
              description: The deployment status summary for all deployments created by the remediation.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
        - input
      extensions:
        x-ms-azure-resource: true
      language: !<!Languages> 
        default:
          name: Remediation
          description: The remediation definition.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_36
    - *ref_37
    - !<!ObjectSchema> &ref_61
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2019-07-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_44
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2019-07-01'
            elementType: *ref_38
            language: !<!Languages> 
              default:
                name: RemediationListResultValue
                description: Array of remediation definitions.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: Array of remediation definitions.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_39
          readOnly: true
          serializedName: nextLink
          language: !<!Languages> 
            default:
              name: nextLink
              description: The URL to get the next set of results.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: RemediationListResult
          description: List of remediations.
          namespace: ''
      protocol: !<!Protocols> {}
  arrays:
    - *ref_40
    - *ref_41
    - *ref_42
    - *ref_43
    - *ref_44
globalParameters:
  - !<!Parameter> &ref_70
    schema: *ref_3
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !<!Languages> 
      default:
        name: SubscriptionId
        description: Microsoft Azure subscription ID.
        serializedName: subscriptionId
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: path
  - !<!Parameter> &ref_46
    schema: *ref_0
    clientDefaultValue: 'https://management.azure.com'
    implementation: Client
    origin: 'modelerfour:synthesized/host'
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !<!Languages> 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
  - !<!Parameter> &ref_49
    schema: *ref_45
    implementation: Client
    origin: 'modelerfour:synthesized/api-version'
    required: true
    language: !<!Languages> 
      default:
        name: apiVersion
        description: Api Version
        serializedName: api-version
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: query
operationGroups:
  - !<!OperationGroup> 
    $key: Remediations
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> 
            schema: *ref_47
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupsNamespace
                description: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
                serializedName: managementGroupsNamespace
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_52
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupId
                description: Management group ID.
                serializedName: managementGroupId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_53
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_48
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_51
            signatureParameters:
              - *ref_51
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_52
          - *ref_53
        responses:
          - !<!SchemaResponse> 
            schema: *ref_54
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListDeploymentsAtManagementGroup
            description: Gets all deployments for a remediation at management group scope.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> 
            schema: *ref_47
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupsNamespace
                description: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
                serializedName: managementGroupsNamespace
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_56
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupId
                description: Management group ID.
                serializedName: managementGroupId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_57
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_56
          - *ref_57
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CancelAtManagementGroup
            description: Cancels a remediation at management group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> 
            schema: *ref_47
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupsNamespace
                description: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
                serializedName: managementGroupsNamespace
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_60
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupId
                description: Management group ID.
                serializedName: managementGroupId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_58
          - *ref_59
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_4
            signatureParameters:
              - *ref_4
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_60
        responses:
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListForManagementGroup
            description: Gets all remediations for the management group.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> 
            schema: *ref_47
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupsNamespace
                description: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
                serializedName: managementGroupsNamespace
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_64
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupId
                description: Management group ID.
                serializedName: managementGroupId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_65
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_62
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_63
                schema: *ref_38
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The remediation parameters.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_63
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_64
          - *ref_65
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateOrUpdateAtManagementGroup
            description: Creates or updates a remediation at management group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> 
            schema: *ref_47
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupsNamespace
                description: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
                serializedName: managementGroupsNamespace
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_66
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupId
                description: Management group ID.
                serializedName: managementGroupId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_67
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_66
          - *ref_67
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetAtManagementGroup
            description: Gets an existing remediation at management group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> 
            schema: *ref_47
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupsNamespace
                description: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
                serializedName: managementGroupsNamespace
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_68
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: managementGroupId
                description: Management group ID.
                serializedName: managementGroupId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_69
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_68
          - *ref_69
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DeleteAtManagementGroup
            description: Deletes an existing remediation at management group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_73
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_71
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_72
            signatureParameters:
              - *ref_72
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_73
        responses:
          - !<!SchemaResponse> 
            schema: *ref_54
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListDeploymentsAtSubscription
            description: Gets all deployments for a remediation at subscription scope.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_74
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_74
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CancelAtSubscription
            description: Cancels a remediation at subscription scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - *ref_75
          - *ref_76
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_5
            signatureParameters:
              - *ref_5
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations'
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListForSubscription
            description: Gets all remediations for the subscription.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_78
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_62
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_77
                schema: *ref_38
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The remediation parameters.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_77
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_78
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateOrUpdateAtSubscription
            description: Creates or updates a remediation at subscription scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_79
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_79
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetAtSubscription
            description: Gets an existing remediation at subscription scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_80
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_80
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DeleteAtSubscription
            description: Deletes an existing remediation at subscription scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_83
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: Resource group name.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_84
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_81
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_82
            signatureParameters:
              - *ref_82
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_83
          - *ref_84
        responses:
          - !<!SchemaResponse> 
            schema: *ref_54
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListDeploymentsAtResourceGroup
            description: Gets all deployments for a remediation at resource group scope.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_85
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: Resource group name.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_86
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_85
          - *ref_86
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CancelAtResourceGroup
            description: Cancels a remediation at resource group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_89
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: Resource group name.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_87
          - *ref_88
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_6
            signatureParameters:
              - *ref_6
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_89
        responses:
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListForResourceGroup
            description: Gets all remediations for the subscription.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_91
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: Resource group name.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_92
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_62
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_90
                schema: *ref_38
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The remediation parameters.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_90
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_91
          - *ref_92
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateOrUpdateAtResourceGroup
            description: Creates or updates a remediation at resource group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_93
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: Resource group name.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_94
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_93
          - *ref_94
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetAtResourceGroup
            description: Gets an existing remediation at resource group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - *ref_70
          - !<!Parameter> &ref_95
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: Resource group name.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_96
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_95
          - *ref_96
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DeleteAtResourceGroup
            description: Deletes an existing remediation at resource group scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> &ref_99
            schema: *ref_3
            implementation: Method
            required: true
            extensions:
              x-ms-skip-url-encoding: true
            language: !<!Languages> 
              default:
                name: resourceId
                description: Resource ID.
                serializedName: resourceId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_100
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_97
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_98
            signatureParameters:
              - *ref_98
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_99
          - *ref_100
        responses:
          - !<!SchemaResponse> 
            schema: *ref_54
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListDeploymentsAtResource
            description: Gets all deployments for a remediation at resource scope.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> &ref_101
            schema: *ref_3
            implementation: Method
            required: true
            extensions:
              x-ms-skip-url-encoding: true
            language: !<!Languages> 
              default:
                name: resourceId
                description: Resource ID.
                serializedName: resourceId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_102
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_101
          - *ref_102
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CancelAtResource
            description: Cancel a remediation at resource scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> &ref_105
            schema: *ref_3
            implementation: Method
            required: true
            extensions:
              x-ms-skip-url-encoding: true
            language: !<!Languages> 
              default:
                name: resourceId
                description: Resource ID.
                serializedName: resourceId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_103
          - *ref_104
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - *ref_7
            signatureParameters:
              - *ref_7
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/{resourceId}/providers/Microsoft.PolicyInsights/remediations'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_105
        responses:
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListForResource
            description: Gets all remediations for a resource.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> &ref_106
            schema: *ref_3
            implementation: Method
            required: true
            extensions:
              x-ms-skip-url-encoding: true
            language: !<!Languages> 
              default:
                name: resourceId
                description: Resource ID.
                serializedName: resourceId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_107
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/{resourceId}/providers/Microsoft.PolicyInsights/VMimage/{remediationName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_106
          - *ref_107
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetAtResource
            description: Gets an existing remediation at resource scope.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> &ref_108
            schema: *ref_3
            implementation: Method
            required: true
            extensions:
              x-ms-skip-url-encoding: true
            language: !<!Languages> 
              default:
                name: resourceId
                description: Resource ID.
                serializedName: resourceId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_109
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/{resourceId}/providers/Microsoft.PolicyInsights/VMimage/{remediationName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_108
          - *ref_109
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DeleteAtResource
            description: Deletes an existing remediation at individual resource scope.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Remediations
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: VirtualImage
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2019-07-01'
        parameters:
          - *ref_46
          - !<!Parameter> &ref_111
            schema: *ref_3
            implementation: Method
            required: true
            extensions:
              x-ms-skip-url-encoding: true
            language: !<!Languages> 
              default:
                name: resourceId
                description: Resource ID.
                serializedName: resourceId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_112
            schema: *ref_3
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: remediationName
                description: The name of the remediation.
                serializedName: remediationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_49
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_62
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_110
                schema: *ref_38
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The remediation parameters.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_50
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_110
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/{resourceId}/providers/Microsoft.PolicyInsights/VMimage/{remediationName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_111
          - *ref_112
        responses:
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_38
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_55
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateOrUpdateAtResource
            description: Creates or updates a remediation at resource scope.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: VirtualImage
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: true
language: !<!Languages> 
  default:
    name: RemediationsClient
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
