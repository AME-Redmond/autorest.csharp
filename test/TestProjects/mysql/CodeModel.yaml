!<!CodeModel> 
info: !<!Info> 
  description: 'The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.'
  title: MySQLManagementClient
schemas: !<!Schemas> 
  booleans:
    - !<!BooleanSchema> &ref_37
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: Create firewall rule before the virtual network has vnet service endpoint enabled.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_100
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: Indicates whether the resource name is available.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_55
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: Specifies that the alert is sent to the account administrators.
      protocol: !<!Protocols> {}
  numbers:
    - !<!NumberSchema> &ref_5
      type: integer
      minimum: 0
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'The scale up/out capacity, representing server''s compute units.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_22
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Backup retention days for the server.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_24
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Max storage allowed for a server.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_77
      type: integer
      minimum: 0
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: The maximum number of replicas that a master server can have.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_47
      type: integer
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: Size of the log file.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_91
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: vCore associated with the service level objective
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_93
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Maximum Backup retention in days for the performance tier edition
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_94
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Minimum Backup retention in days for the performance tier edition
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_58
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Specifies the number of days to keep in the Threat Detection audit logs.
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_124
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      minLength: 1
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_129
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      maxLength: 90
      minLength: 1
      pattern: '^[-\w\._\(\)]+$'
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_1
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_3
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SkuName
          description: 'The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_6
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SkuSize
          description: 'The size code, to be interpreted by resource as appropriate.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_7
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SkuFamily
          description: The family of hardware.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_27
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerForCreateLocation
          description: The location the resource resides in.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_71
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesAdministratorLogin
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_73
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesFullyQualifiedDomainName
          description: The fully qualified domain name of a server.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_75
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesReplicationRole
          description: The replication role of the server.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_76
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesMasterServerId
          description: The master server id of a replica server.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_69
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: TrackedResourceLocation
          description: The location the resource resides in.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_66
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ResourceId
          description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_67
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ResourceName
          description: The name of the resource
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_68
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ResourceType
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_80
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerUpdateParametersPropertiesReplicationRole
          description: The replication role of the server.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_81
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ErrorResponseCode
          description: The error code.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_82
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ErrorResponseMessage
          description: The error message.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_83
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ErrorResponseTarget
          description: The error target.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_85
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '1.0'
      language: !<!Languages> 
        default:
          name: ErrorAdditionalInfoType
          description: The additional info type.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_34
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
      language: !<!Languages> 
        default:
          name: FirewallRulePropertiesStartIpAddress
          description: The start IP address of the server firewall rule. Must be IPv4 format.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_35
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
      language: !<!Languages> 
        default:
          name: FirewallRulePropertiesEndIpAddress
          description: The end IP address of the server firewall rule. Must be IPv4 format.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_36
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: VirtualNetworkRulePropertiesVirtualNetworkSubnetId
          description: The ARM resource id of the virtual network subnet.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_87
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: VirtualNetworkRuleListResultNextLink
          description: Link to retrieve next page of results.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_39
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: DatabasePropertiesCharset
          description: The charset of the database.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_40
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: DatabasePropertiesCollation
          description: The collation of the database.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_41
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ConfigurationPropertiesValue
          description: Value of the configuration.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_42
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ConfigurationPropertiesDescription
          description: Description of the configuration.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_43
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ConfigurationPropertiesDefaultValue
          description: Default value of the configuration.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_44
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ConfigurationPropertiesDataType
          description: Data type of the configuration.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_45
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ConfigurationPropertiesAllowedValues
          description: Allowed values of the configuration.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_46
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ConfigurationPropertiesSource
          description: Source of the configuration.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_50
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: LogFilePropertiesType
          description: Type of the log file.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_51
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: LogFilePropertiesUrl
          description: The url to download the log file from.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_88
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: PerformanceTierPropertiesId
          description: ID of the performance tier.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_89
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: PerformanceTierServiceLevelObjectivesId
          description: ID for the service level objective.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_90
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: PerformanceTierServiceLevelObjectivesEdition
          description: Edition of the performance tier.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_92
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: PerformanceTierServiceLevelObjectivesHardwareGeneration
          description: Hardware generation associated with the service level objective
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_97
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: NameAvailabilityRequestName
          description: Resource name to verify.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_98
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: NameAvailabilityRequestType
          description: Resource type used for verification.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_99
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: NameAvailabilityMessage
          description: Error Message.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_101
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: NameAvailabilityReason
          description: Reason for name being unavailable.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_53
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SecurityAlertPolicyPropertiesDisabledAlertsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_54
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SecurityAlertPolicyPropertiesEmailAddressesItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_56
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SecurityAlertPolicyPropertiesStorageEndpoint
          description: 'Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.'
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_57
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: SecurityAlertPolicyPropertiesStorageAccountAccessKey
          description: Specifies the identifier key of the Threat Detection audit storage account.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_102
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: OperationName
          description: The name of the operation being performed on this particular object.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_103
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: OperationDisplayProvider
          description: Operation resource provider name.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_104
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: OperationDisplayResource
          description: Resource on which the operation is performed.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_105
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: OperationDisplayOperation
          description: Localized friendly name for the operation.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_106
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: OperationDisplayDescription
          description: Operation description.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_9
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesForDefaultCreateAdministratorLogin
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_11
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesForRestoreSourceServerId
          description: The source server id to restore from.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_13
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesForGeoRestoreSourceServerId
          description: The source server id to restore from.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_14
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesForReplicaSourceServerId
          description: The master server id to create replica from.
      protocol: !<!Protocols> {}
    - !<!StringSchema> 
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: LogFileName
          description: The name of the log file.
      protocol: !<!Protocols> {}
  choices:
    - !<!ChoiceSchema> &ref_4
      choices:
        - !<!ChoiceValue> 
          value: Basic
          language:
            default:
              name: Basic
              description: ''
        - !<!ChoiceValue> 
          value: GeneralPurpose
          language:
            default:
              name: GeneralPurpose
              description: ''
        - !<!ChoiceValue> 
          value: MemoryOptimized
          language:
            default:
              name: MemoryOptimized
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: SkuTier
          description: 'The tier of the particular SKU, e.g. Basic.'
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_20
      choices:
        - !<!ChoiceValue> 
          value: '5.6'
          language:
            default:
              name: Five6
              description: ''
        - !<!ChoiceValue> 
          value: '5.7'
          language:
            default:
              name: Five7
              description: ''
        - !<!ChoiceValue> 
          value: '8.0'
          language:
            default:
              name: Eight0
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: ServerVersion
          description: The version of a server.
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_23
      choices:
        - !<!ChoiceValue> 
          value: Enabled
          language:
            default:
              name: Enabled
              description: ''
        - !<!ChoiceValue> 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: GeoRedundantBackup
          description: Enable Geo-redundant or not for server backup.
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_25
      choices:
        - !<!ChoiceValue> 
          value: Enabled
          language:
            default:
              name: Enabled
              description: ''
        - !<!ChoiceValue> 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: StorageAutogrow
          description: Enable Storage Auto Grow.
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_19
      choices:
        - !<!ChoiceValue> 
          value: Default
          language:
            default:
              name: Default
              description: ''
        - !<!ChoiceValue> 
          value: PointInTimeRestore
          language:
            default:
              name: PointInTimeRestore
              description: ''
        - !<!ChoiceValue> 
          value: GeoRestore
          language:
            default:
              name: GeoRestore
              description: ''
        - !<!ChoiceValue> 
          value: Replica
          language:
            default:
              name: Replica
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: CreateMode
          description: The mode to create a new server.
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_72
      choices:
        - !<!ChoiceValue> 
          value: Ready
          language:
            default:
              name: Ready
              description: ''
        - !<!ChoiceValue> 
          value: Dropping
          language:
            default:
              name: Dropping
              description: ''
        - !<!ChoiceValue> 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: ServerState
          description: A state of a server that is visible to user.
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_38
      choices:
        - !<!ChoiceValue> 
          value: Initializing
          language:
            default:
              name: Initializing
              description: ''
        - !<!ChoiceValue> 
          value: InProgress
          language:
            default:
              name: InProgress
              description: ''
        - !<!ChoiceValue> 
          value: Ready
          language:
            default:
              name: Ready
              description: ''
        - !<!ChoiceValue> 
          value: Deleting
          language:
            default:
              name: Deleting
              description: ''
        - !<!ChoiceValue> 
          value: Unknown
          language:
            default:
              name: Unknown
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: VirtualNetworkRuleState
          description: Virtual Network Rule State
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_208
      choices:
        - !<!ChoiceValue> 
          value: Default
          language:
            default:
              name: Default
              description: ''
      type: choice
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: SecurityAlertPolicyName
          description: ''
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_107
      choices:
        - !<!ChoiceValue> 
          value: NotSpecified
          language:
            default:
              name: NotSpecified
              description: ''
        - !<!ChoiceValue> 
          value: user
          language:
            default:
              name: User
              description: ''
        - !<!ChoiceValue> 
          value: system
          language:
            default:
              name: System
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: OperationOrigin
          description: The intended executor of the operation.
      protocol: !<!Protocols> {}
  sealedChoices:
    - !<!SealedChoiceSchema> &ref_21
      choices:
        - !<!ChoiceValue> 
          value: Enabled
          language:
            default:
              name: Enabled
              description: ''
        - !<!ChoiceValue> 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: SslEnforcementEnum
          description: Enable ssl enforcement or not when connect to server.
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_52
      choices:
        - !<!ChoiceValue> 
          value: Enabled
          language:
            default:
              name: Enabled
              description: ''
        - !<!ChoiceValue> 
          value: Disabled
          language:
            default:
              name: Disabled
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: ServerSecurityAlertPolicyState
          description: 'Specifies the state of the policy, whether it is enabled or disabled.'
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_125
      type: constant
      value: !<!ConstantValue> 
        value: '2017-12-01'
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApiVersion20171201
          description: Api Version (2017-12-01)
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_130
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_132
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !<!Protocols> {}
  dictionaries:
    - !<!DictionarySchema> &ref_28
      type: dictionary
      elementType: *ref_1
      language: !<!Languages> 
        default:
          name: ServerForCreateTags
          description: Application-specific metadata in the form of key-value pairs.
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_70
      type: dictionary
      elementType: *ref_1
      language: !<!Languages> 
        default:
          name: TrackedResourceTags
          description: Application-specific metadata in the form of key-value pairs.
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_78
      type: dictionary
      elementType: *ref_1
      language: !<!Languages> 
        default:
          name: ServerUpdateParametersTags
          description: Application-specific metadata in the form of key-value pairs.
      protocol: !<!Protocols> {}
    - !<!DictionarySchema> &ref_108
      type: dictionary
      elementType: !<!AnySchema> &ref_2
        type: any
        language: !<!Languages> 
          default:
            name: any
            description: Any object
        protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: OperationProperties
          description: Additional descriptions for the operation.
      protocol: !<!Protocols> {}
  any:
    - *ref_2
  credentials:
    - !<!CredentialSchema> &ref_79
      type: credential
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerUpdateParameters-properties-administratorLoginPassword
          description: The password of the administrator login.
      protocol: !<!Protocols> {}
    - !<!CredentialSchema> &ref_10
      type: credential
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesForDefaultCreate-administratorLoginPassword
          description: The password of the administrator login.
      protocol: !<!Protocols> {}
  dateTimes:
    - !<!DateTimeSchema> &ref_74
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesEarliestRestoreDate
          description: Earliest restore point creation time (ISO8601 format)
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_48
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: LogFilePropertiesCreatedTime
          description: Creation timestamp of the log file.
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_49
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: LogFilePropertiesLastModifiedTime
          description: Last modified timestamp of the log file.
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_12
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      language: !<!Languages> 
        default:
          name: ServerPropertiesForRestorePointInTime
          description: 'Restore point creation time (ISO8601 format), specifying the time to restore from.'
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_131
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_29
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            properties:
              - !<!Property> 
                schema: *ref_3
                serializedName: name
                language: !<!Languages> 
                  default:
                    name: name
                    description: 'The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_4
                serializedName: tier
                language: !<!Languages> 
                  default:
                    name: tier
                    description: 'The tier of the particular SKU, e.g. Basic.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_5
                serializedName: capacity
                language: !<!Languages> 
                  default:
                    name: capacity
                    description: 'The scale up/out capacity, representing server''s compute units.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_6
                serializedName: size
                language: !<!Languages> 
                  default:
                    name: size
                    description: 'The size code, to be interpreted by resource as appropriate.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_7
                serializedName: family
                language: !<!Languages> 
                  default:
                    name: family
                    description: The family of hardware.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !<!Languages> 
              default:
                name: Sku
                description: Billing information related properties of a server.
                namespace: ''
            protocol: !<!Protocols> {}
          required: false
          serializedName: sku
          language: !<!Languages> 
            default:
              name: sku
              description: The SKU (pricing tier) of the server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_8
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            children: !<!Relations> 
              all:
                - !<!ObjectSchema> &ref_15
                  type: object
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2017-12-01'
                  discriminatorValue: Default
                  parents: !<!Relations> 
                    all:
                      - *ref_8
                    immediate:
                      - *ref_8
                  properties:
                    - !<!Property> 
                      schema: *ref_9
                      required: true
                      serializedName: administratorLogin
                      language: !<!Languages> 
                        default:
                          name: administratorLogin
                          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_10
                      required: true
                      serializedName: administratorLoginPassword
                      language: !<!Languages> 
                        default:
                          name: administratorLoginPassword
                          description: The password of the administrator login.
                      protocol: !<!Protocols> {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                  extensions:
                    x-ms-discriminator-value: Default
                  language: !<!Languages> 
                    default:
                      name: ServerPropertiesForDefaultCreate
                      description: The properties used to create a new server.
                      namespace: ''
                  protocol: !<!Protocols> {}
                - !<!ObjectSchema> &ref_16
                  type: object
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2017-12-01'
                  discriminatorValue: PointInTimeRestore
                  parents: !<!Relations> 
                    all:
                      - *ref_8
                    immediate:
                      - *ref_8
                  properties:
                    - !<!Property> 
                      schema: *ref_11
                      required: true
                      serializedName: sourceServerId
                      language: !<!Languages> 
                        default:
                          name: sourceServerId
                          description: The source server id to restore from.
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_12
                      required: true
                      serializedName: restorePointInTime
                      language: !<!Languages> 
                        default:
                          name: restorePointInTime
                          description: 'Restore point creation time (ISO8601 format), specifying the time to restore from.'
                      protocol: !<!Protocols> {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                  extensions:
                    x-ms-discriminator-value: PointInTimeRestore
                  language: !<!Languages> 
                    default:
                      name: ServerPropertiesForRestore
                      description: The properties used to create a new server by restoring from a backup.
                      namespace: ''
                  protocol: !<!Protocols> {}
                - !<!ObjectSchema> &ref_17
                  type: object
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2017-12-01'
                  discriminatorValue: GeoRestore
                  parents: !<!Relations> 
                    all:
                      - *ref_8
                    immediate:
                      - *ref_8
                  properties:
                    - !<!Property> 
                      schema: *ref_13
                      required: true
                      serializedName: sourceServerId
                      language: !<!Languages> 
                        default:
                          name: sourceServerId
                          description: The source server id to restore from.
                      protocol: !<!Protocols> {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                  extensions:
                    x-ms-discriminator-value: GeoRestore
                  language: !<!Languages> 
                    default:
                      name: ServerPropertiesForGeoRestore
                      description: The properties used to create a new server by restoring to a different region from a geo replicated backup.
                      namespace: ''
                  protocol: !<!Protocols> {}
                - !<!ObjectSchema> &ref_18
                  type: object
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2017-12-01'
                  discriminatorValue: Replica
                  parents: !<!Relations> 
                    all:
                      - *ref_8
                    immediate:
                      - *ref_8
                  properties:
                    - !<!Property> 
                      schema: *ref_14
                      required: true
                      serializedName: sourceServerId
                      language: !<!Languages> 
                        default:
                          name: sourceServerId
                          description: The master server id to create replica from.
                      protocol: !<!Protocols> {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                  extensions:
                    x-ms-discriminator-value: Replica
                  language: !<!Languages> 
                    default:
                      name: ServerPropertiesForReplica
                      description: The properties to create a new replica.
                      namespace: ''
                  protocol: !<!Protocols> {}
              immediate:
                - *ref_15
                - *ref_16
                - *ref_17
                - *ref_18
            discriminator: !<!Discriminator> 
              all:
                Default: *ref_15
                GeoRestore: *ref_17
                PointInTimeRestore: *ref_16
                Replica: *ref_18
              immediate:
                Default: *ref_15
                GeoRestore: *ref_17
                PointInTimeRestore: *ref_16
                Replica: *ref_18
              property: !<!Property> &ref_26
                schema: *ref_19
                isDiscriminator: true
                required: true
                serializedName: createMode
                language: !<!Languages> 
                  default:
                    name: createMode
                    description: The mode to create a new server.
                protocol: !<!Protocols> {}
            properties:
              - !<!Property> 
                schema: *ref_20
                required: false
                serializedName: version
                language: !<!Languages> 
                  default:
                    name: version
                    description: Server version.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_21
                required: false
                serializedName: sslEnforcement
                language: !<!Languages> 
                  default:
                    name: sslEnforcement
                    description: Enable ssl enforcement or not when connect to server.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ObjectSchema> &ref_30
                  type: object
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '2017-12-01'
                  properties:
                    - !<!Property> 
                      schema: *ref_22
                      serializedName: backupRetentionDays
                      language: !<!Languages> 
                        default:
                          name: backupRetentionDays
                          description: Backup retention days for the server.
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_23
                      serializedName: geoRedundantBackup
                      language: !<!Languages> 
                        default:
                          name: geoRedundantBackup
                          description: Enable Geo-redundant or not for server backup.
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_24
                      serializedName: storageMB
                      language: !<!Languages> 
                        default:
                          name: storageMB
                          description: Max storage allowed for a server.
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_25
                      serializedName: storageAutogrow
                      language: !<!Languages> 
                        default:
                          name: storageAutogrow
                          description: Enable Storage Auto Grow.
                      protocol: !<!Protocols> {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  language: !<!Languages> 
                    default:
                      name: StorageProfile
                      description: Storage Profile properties of a server
                      namespace: ''
                  protocol: !<!Protocols> {}
                required: false
                serializedName: storageProfile
                language: !<!Languages> 
                  default:
                    name: storageProfile
                    description: Storage profile of a server.
                protocol: !<!Protocols> {}
              - *ref_26
            serializationFormats:
              - json
            usage:
              - input
            language: !<!Languages> 
              default:
                name: ServerPropertiesForCreate
                description: The properties used to create a new server.
                namespace: ''
            protocol: !<!Protocols> {}
          required: true
          serializedName: properties
          extensions:
            x-ms-client-flatten: false
          language: !<!Languages> 
            default:
              name: properties
              description: Properties of the server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_27
          required: true
          serializedName: location
          language: !<!Languages> 
            default:
              name: location
              description: The location the resource resides in.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_28
          required: false
          serializedName: tags
          language: !<!Languages> 
            default:
              name: tags
              description: Application-specific metadata in the form of key-value pairs.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ServerForCreate
          description: Represents a server to be created.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_29
    - *ref_8
    - *ref_30
    - !<!ObjectSchema> &ref_31
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      parents: !<!Relations> 
        all:
          - !<!ObjectSchema> &ref_32
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            children: !<!Relations> 
              all:
                - *ref_31
              immediate:
                - *ref_31
            parents: !<!Relations> 
              all:
                - !<!ObjectSchema> &ref_33
                  type: object
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '1.0'
                  children: !<!Relations> 
                    all:
                      - *ref_32
                      - *ref_31
                      - !<!ObjectSchema> &ref_59
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2017-12-01'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        properties:
                          - !<!Property> 
                            schema: *ref_34
                            flattenedNames:
                              - properties
                              - startIpAddress
                            required: true
                            serializedName: startIpAddress
                            language: !<!Languages> 
                              default:
                                name: startIpAddress
                                description: The start IP address of the server firewall rule. Must be IPv4 format.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_35
                            flattenedNames:
                              - properties
                              - endIpAddress
                            required: true
                            serializedName: endIpAddress
                            language: !<!Languages> 
                              default:
                                name: endIpAddress
                                description: The end IP address of the server firewall rule. Must be IPv4 format.
                            protocol: !<!Protocols> {}
                        serializationFormats:
                          - json
                        usage:
                          - input
                          - output
                        language: !<!Languages> 
                          default:
                            name: FirewallRule
                            description: Represents a server firewall rule.
                            namespace: ''
                        protocol: !<!Protocols> {}
                      - !<!ObjectSchema> &ref_60
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2017-12-01'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        properties:
                          - !<!Property> 
                            schema: *ref_36
                            flattenedNames:
                              - properties
                              - virtualNetworkSubnetId
                            serializedName: virtualNetworkSubnetId
                            language: !<!Languages> 
                              default:
                                name: virtualNetworkSubnetId
                                description: The ARM resource id of the virtual network subnet.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_37
                            flattenedNames:
                              - properties
                              - ignoreMissingVnetServiceEndpoint
                            serializedName: ignoreMissingVnetServiceEndpoint
                            language: !<!Languages> 
                              default:
                                name: ignoreMissingVnetServiceEndpoint
                                description: Create firewall rule before the virtual network has vnet service endpoint enabled.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_38
                            flattenedNames:
                              - properties
                              - state
                            readOnly: true
                            serializedName: state
                            language: !<!Languages> 
                              default:
                                name: state
                                description: Virtual Network Rule State
                            protocol: !<!Protocols> {}
                        serializationFormats:
                          - json
                        usage:
                          - output
                          - input
                        language: !<!Languages> 
                          default:
                            name: VirtualNetworkRule
                            description: A virtual network rule.
                            namespace: ''
                        protocol: !<!Protocols> {}
                      - !<!ObjectSchema> &ref_61
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2017-12-01'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        properties:
                          - !<!Property> 
                            schema: *ref_39
                            flattenedNames:
                              - properties
                              - charset
                            serializedName: charset
                            language: !<!Languages> 
                              default:
                                name: charset
                                description: The charset of the database.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_40
                            flattenedNames:
                              - properties
                              - collation
                            serializedName: collation
                            language: !<!Languages> 
                              default:
                                name: collation
                                description: The collation of the database.
                            protocol: !<!Protocols> {}
                        serializationFormats:
                          - json
                        usage:
                          - input
                          - output
                        language: !<!Languages> 
                          default:
                            name: Database
                            description: Represents a Database.
                            namespace: ''
                        protocol: !<!Protocols> {}
                      - !<!ObjectSchema> &ref_62
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2017-12-01'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        properties:
                          - !<!Property> 
                            schema: *ref_41
                            flattenedNames:
                              - properties
                              - value
                            serializedName: value
                            language: !<!Languages> 
                              default:
                                name: value
                                description: Value of the configuration.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_42
                            flattenedNames:
                              - properties
                              - description
                            readOnly: true
                            serializedName: description
                            language: !<!Languages> 
                              default:
                                name: description
                                description: Description of the configuration.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_43
                            flattenedNames:
                              - properties
                              - defaultValue
                            readOnly: true
                            serializedName: defaultValue
                            language: !<!Languages> 
                              default:
                                name: defaultValue
                                description: Default value of the configuration.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_44
                            flattenedNames:
                              - properties
                              - dataType
                            readOnly: true
                            serializedName: dataType
                            language: !<!Languages> 
                              default:
                                name: dataType
                                description: Data type of the configuration.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_45
                            flattenedNames:
                              - properties
                              - allowedValues
                            readOnly: true
                            serializedName: allowedValues
                            language: !<!Languages> 
                              default:
                                name: allowedValues
                                description: Allowed values of the configuration.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_46
                            flattenedNames:
                              - properties
                              - source
                            serializedName: source
                            language: !<!Languages> 
                              default:
                                name: source
                                description: Source of the configuration.
                            protocol: !<!Protocols> {}
                        serializationFormats:
                          - json
                        usage:
                          - input
                          - output
                        language: !<!Languages> 
                          default:
                            name: Configuration
                            description: Represents a Configuration.
                            namespace: ''
                        protocol: !<!Protocols> {}
                      - !<!ObjectSchema> &ref_63
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2017-12-01'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        properties:
                          - !<!Property> 
                            schema: *ref_47
                            flattenedNames:
                              - properties
                              - sizeInKB
                            serializedName: sizeInKB
                            language: !<!Languages> 
                              default:
                                name: sizeInKB
                                description: Size of the log file.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_48
                            flattenedNames:
                              - properties
                              - createdTime
                            readOnly: true
                            serializedName: createdTime
                            language: !<!Languages> 
                              default:
                                name: createdTime
                                description: Creation timestamp of the log file.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_49
                            flattenedNames:
                              - properties
                              - lastModifiedTime
                            readOnly: true
                            serializedName: lastModifiedTime
                            language: !<!Languages> 
                              default:
                                name: lastModifiedTime
                                description: Last modified timestamp of the log file.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_50
                            flattenedNames:
                              - properties
                              - type
                            serializedName: type
                            language: !<!Languages> 
                              default:
                                name: typePropertiesType
                                description: Type of the log file.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_51
                            flattenedNames:
                              - properties
                              - url
                            serializedName: url
                            language: !<!Languages> 
                              default:
                                name: url
                                description: The url to download the log file from.
                            protocol: !<!Protocols> {}
                        serializationFormats:
                          - json
                        usage:
                          - output
                          - input
                        language: !<!Languages> 
                          default:
                            name: LogFile
                            description: Represents a log file.
                            namespace: ''
                        protocol: !<!Protocols> {}
                      - !<!ObjectSchema> &ref_64
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '2017-12-01'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        properties:
                          - !<!Property> 
                            schema: *ref_52
                            flattenedNames:
                              - properties
                              - state
                            serializedName: state
                            language: !<!Languages> 
                              default:
                                name: state
                                description: 'Specifies the state of the policy, whether it is enabled or disabled.'
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: !<!ArraySchema> &ref_121
                              type: array
                              apiVersions:
                                - !<!ApiVersion> 
                                  version: '2017-12-01'
                              elementType: *ref_53
                              language: !<!Languages> 
                                default:
                                  name: SecurityAlertPolicyPropertiesDisabledAlerts
                                  description: 'Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly'
                              protocol: !<!Protocols> {}
                            flattenedNames:
                              - properties
                              - disabledAlerts
                            serializedName: disabledAlerts
                            language: !<!Languages> 
                              default:
                                name: disabledAlerts
                                description: 'Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly'
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: !<!ArraySchema> &ref_122
                              type: array
                              apiVersions:
                                - !<!ApiVersion> 
                                  version: '2017-12-01'
                              elementType: *ref_54
                              language: !<!Languages> 
                                default:
                                  name: SecurityAlertPolicyPropertiesEmailAddresses
                                  description: Specifies an array of e-mail addresses to which the alert is sent.
                              protocol: !<!Protocols> {}
                            flattenedNames:
                              - properties
                              - emailAddresses
                            serializedName: emailAddresses
                            language: !<!Languages> 
                              default:
                                name: emailAddresses
                                description: Specifies an array of e-mail addresses to which the alert is sent.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_55
                            flattenedNames:
                              - properties
                              - emailAccountAdmins
                            serializedName: emailAccountAdmins
                            language: !<!Languages> 
                              default:
                                name: emailAccountAdmins
                                description: Specifies that the alert is sent to the account administrators.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_56
                            flattenedNames:
                              - properties
                              - storageEndpoint
                            serializedName: storageEndpoint
                            language: !<!Languages> 
                              default:
                                name: storageEndpoint
                                description: 'Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.'
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_57
                            flattenedNames:
                              - properties
                              - storageAccountAccessKey
                            serializedName: storageAccountAccessKey
                            language: !<!Languages> 
                              default:
                                name: storageAccountAccessKey
                                description: Specifies the identifier key of the Threat Detection audit storage account.
                            protocol: !<!Protocols> {}
                          - !<!Property> 
                            schema: *ref_58
                            flattenedNames:
                              - properties
                              - retentionDays
                            serializedName: retentionDays
                            language: !<!Languages> 
                              default:
                                name: retentionDays
                                description: Specifies the number of days to keep in the Threat Detection audit logs.
                            protocol: !<!Protocols> {}
                        serializationFormats:
                          - json
                        usage:
                          - output
                          - input
                        language: !<!Languages> 
                          default:
                            name: ServerSecurityAlertPolicy
                            description: A server security alert policy.
                            namespace: ''
                        protocol: !<!Protocols> {}
                      - !<!ObjectSchema> &ref_65
                        type: object
                        apiVersions:
                          - !<!ApiVersion> 
                            version: '1.0'
                        parents: !<!Relations> 
                          all:
                            - *ref_33
                          immediate:
                            - *ref_33
                        serializationFormats:
                          - json
                        usage:
                          - output
                          - input
                        language: !<!Languages> 
                          default:
                            name: ProxyResource
                            description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
                            namespace: ''
                        protocol: !<!Protocols> {}
                    immediate:
                      - *ref_32
                      - *ref_59
                      - *ref_60
                      - *ref_61
                      - *ref_62
                      - *ref_63
                      - *ref_64
                      - *ref_65
                  properties:
                    - !<!Property> 
                      schema: *ref_66
                      readOnly: true
                      serializedName: id
                      language: !<!Languages> 
                        default:
                          name: id
                          description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_67
                      readOnly: true
                      serializedName: name
                      language: !<!Languages> 
                        default:
                          name: name
                          description: The name of the resource
                      protocol: !<!Protocols> {}
                    - !<!Property> 
                      schema: *ref_68
                      readOnly: true
                      serializedName: type
                      language: !<!Languages> 
                        default:
                          name: type
                          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
                      protocol: !<!Protocols> {}
                  serializationFormats:
                    - json
                  usage:
                    - output
                    - input
                  extensions:
                    x-ms-azure-resource: true
                  language: !<!Languages> 
                    default:
                      name: Resource
                      description: ''
                      namespace: ''
                  protocol: !<!Protocols> {}
              immediate:
                - *ref_33
            properties:
              - !<!Property> 
                schema: *ref_69
                required: true
                serializedName: location
                language: !<!Languages> 
                  default:
                    name: location
                    description: The location the resource resides in.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_70
                required: false
                serializedName: tags
                language: !<!Languages> 
                  default:
                    name: tags
                    description: Application-specific metadata in the form of key-value pairs.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
              - input
            language: !<!Languages> 
              default:
                name: TrackedResource
                description: Resource properties including location and tags for track resources.
                namespace: ''
            protocol: !<!Protocols> {}
          - *ref_33
        immediate:
          - *ref_32
      properties:
        - !<!Property> 
          schema: *ref_29
          serializedName: sku
          language: !<!Languages> 
            default:
              name: sku
              description: The SKU (pricing tier) of the server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_71
          flattenedNames:
            - properties
            - administratorLogin
          serializedName: administratorLogin
          language: !<!Languages> 
            default:
              name: administratorLogin
              description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_20
          flattenedNames:
            - properties
            - version
          serializedName: version
          language: !<!Languages> 
            default:
              name: version
              description: Server version.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_21
          flattenedNames:
            - properties
            - sslEnforcement
          serializedName: sslEnforcement
          language: !<!Languages> 
            default:
              name: sslEnforcement
              description: Enable ssl enforcement or not when connect to server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_72
          flattenedNames:
            - properties
            - userVisibleState
          serializedName: userVisibleState
          language: !<!Languages> 
            default:
              name: userVisibleState
              description: A state of a server that is visible to user.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_73
          flattenedNames:
            - properties
            - fullyQualifiedDomainName
          serializedName: fullyQualifiedDomainName
          language: !<!Languages> 
            default:
              name: fullyQualifiedDomainName
              description: The fully qualified domain name of a server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_74
          flattenedNames:
            - properties
            - earliestRestoreDate
          serializedName: earliestRestoreDate
          language: !<!Languages> 
            default:
              name: earliestRestoreDate
              description: Earliest restore point creation time (ISO8601 format)
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_30
          flattenedNames:
            - properties
            - storageProfile
          serializedName: storageProfile
          language: !<!Languages> 
            default:
              name: storageProfile
              description: Storage profile of a server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_75
          flattenedNames:
            - properties
            - replicationRole
          serializedName: replicationRole
          language: !<!Languages> 
            default:
              name: replicationRole
              description: The replication role of the server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_76
          flattenedNames:
            - properties
            - masterServerId
          serializedName: masterServerId
          language: !<!Languages> 
            default:
              name: masterServerId
              description: The master server id of a replica server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_77
          flattenedNames:
            - properties
            - replicaCapacity
          serializedName: replicaCapacity
          language: !<!Languages> 
            default:
              name: replicaCapacity
              description: The maximum number of replicas that a master server can have.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
        - input
      language: !<!Languages> 
        default:
          name: Server
          description: Represents a server.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_32
    - *ref_33
    - !<!ObjectSchema> &ref_136
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: *ref_29
          serializedName: sku
          language: !<!Languages> 
            default:
              name: sku
              description: The SKU (pricing tier) of the server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_78
          serializedName: tags
          language: !<!Languages> 
            default:
              name: tags
              description: Application-specific metadata in the form of key-value pairs.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_30
          flattenedNames:
            - properties
            - storageProfile
          serializedName: storageProfile
          language: !<!Languages> 
            default:
              name: storageProfile
              description: Storage profile of a server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_79
          flattenedNames:
            - properties
            - administratorLoginPassword
          serializedName: administratorLoginPassword
          language: !<!Languages> 
            default:
              name: administratorLoginPassword
              description: The password of the administrator login.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_20
          flattenedNames:
            - properties
            - version
          serializedName: version
          language: !<!Languages> 
            default:
              name: version
              description: The version of a server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_21
          flattenedNames:
            - properties
            - sslEnforcement
          serializedName: sslEnforcement
          language: !<!Languages> 
            default:
              name: sslEnforcement
              description: Enable ssl enforcement or not when connect to server.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_80
          flattenedNames:
            - properties
            - replicationRole
          serializedName: replicationRole
          language: !<!Languages> 
            default:
              name: replicationRole
              description: The replication role of the server.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ServerUpdateParameters
          description: Parameters allowed to update for a server.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_145
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_111
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: *ref_31
            language: !<!Languages> 
              default:
                name: ServerListResultValue
                description: The list of servers
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of servers
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: ServerListResult
          description: A list of servers.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_148
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_84
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '1.0'
            properties:
              - !<!Property> 
                schema: *ref_81
                readOnly: true
                serializedName: code
                language: !<!Languages> 
                  default:
                    name: code
                    description: The error code.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_82
                readOnly: true
                serializedName: message
                language: !<!Languages> 
                  default:
                    name: message
                    description: The error message.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_83
                readOnly: true
                serializedName: target
                language: !<!Languages> 
                  default:
                    name: target
                    description: The error target.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ArraySchema> &ref_112
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '1.0'
                  elementType: *ref_84
                  language: !<!Languages> 
                    default:
                      name: ErrorResponseDetails
                      description: The error details.
                  protocol: !<!Protocols> {}
                readOnly: true
                serializedName: details
                language: !<!Languages> 
                  default:
                    name: details
                    description: The error details.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ArraySchema> &ref_113
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '1.0'
                  elementType: !<!ObjectSchema> &ref_86
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '1.0'
                    properties:
                      - !<!Property> 
                        schema: *ref_85
                        readOnly: true
                        serializedName: type
                        language: !<!Languages> 
                          default:
                            name: type
                            description: The additional info type.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_2
                        readOnly: true
                        serializedName: info
                        language: !<!Languages> 
                          default:
                            name: info
                            description: The additional info.
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - exception
                    language: !<!Languages> 
                      default:
                        name: ErrorAdditionalInfo
                        description: The resource management error additional info.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  language: !<!Languages> 
                    default:
                      name: ErrorResponseAdditionalInfo
                      description: The error additional info.
                  protocol: !<!Protocols> {}
                readOnly: true
                serializedName: additionalInfo
                language: !<!Languages> 
                  default:
                    name: additionalInfo
                    description: The error additional info.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - exception
            language: !<!Languages> 
              default:
                name: ErrorResponse
                description: The resource management error response.
                namespace: ''
            protocol: !<!Protocols> {}
          serializedName: error
          language: !<!Languages> 
            default:
              name: error
              description: The resource management error response.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - exception
      extensions:
        x-ms-external: true
      language: !<!Languages> 
        default:
          name: CloudError
          description: An error response from the Batch service.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_84
    - *ref_86
    - *ref_59
    - !<!ObjectSchema> &ref_163
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_114
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: *ref_59
            language: !<!Languages> 
              default:
                name: FirewallRuleListResultValue
                description: The list of firewall rules in a server.
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of firewall rules in a server.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: FirewallRuleListResult
          description: A list of firewall rules.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_60
    - !<!ObjectSchema> &ref_176
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_115
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: *ref_60
            language: !<!Languages> 
              default:
                name: VirtualNetworkRuleListResultValue
                description: Array of results.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: Array of results.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_87
          readOnly: true
          serializedName: nextLink
          language: !<!Languages> 
            default:
              name: nextLink
              description: Link to retrieve next page of results.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: VirtualNetworkRuleListResult
          description: A list of virtual network rules.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_61
    - !<!ObjectSchema> &ref_189
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_116
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: *ref_61
            language: !<!Languages> 
              default:
                name: DatabaseListResultValue
                description: The list of databases housed in a server
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of databases housed in a server
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: DatabaseListResult
          description: A List of databases.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_62
    - !<!ObjectSchema> &ref_199
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_117
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: *ref_62
            language: !<!Languages> 
              default:
                name: ConfigurationListResultValue
                description: The list of server configurations.
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of server configurations.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: ConfigurationListResult
          description: A list of server configurations.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_202
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_118
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: *ref_63
            language: !<!Languages> 
              default:
                name: LogFileListResultValue
                description: The list of log files.
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of log files.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: LogFileListResult
          description: A list of log files.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_63
    - !<!ObjectSchema> &ref_204
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_120
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: !<!ObjectSchema> &ref_95
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2017-12-01'
              properties:
                - !<!Property> 
                  schema: *ref_88
                  serializedName: id
                  language: !<!Languages> 
                    default:
                      name: id
                      description: ID of the performance tier.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ArraySchema> &ref_119
                    type: array
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '2017-12-01'
                    elementType: !<!ObjectSchema> &ref_96
                      type: object
                      apiVersions:
                        - !<!ApiVersion> 
                          version: '2017-12-01'
                      properties:
                        - !<!Property> 
                          schema: *ref_89
                          serializedName: id
                          language: !<!Languages> 
                            default:
                              name: id
                              description: ID for the service level objective.
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_90
                          serializedName: edition
                          language: !<!Languages> 
                            default:
                              name: edition
                              description: Edition of the performance tier.
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_91
                          serializedName: vCore
                          language: !<!Languages> 
                            default:
                              name: vCore
                              description: vCore associated with the service level objective
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_92
                          serializedName: hardwareGeneration
                          language: !<!Languages> 
                            default:
                              name: hardwareGeneration
                              description: Hardware generation associated with the service level objective
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_93
                          serializedName: maxBackupRetentionDays
                          language: !<!Languages> 
                            default:
                              name: maxBackupRetentionDays
                              description: Maximum Backup retention in days for the performance tier edition
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_94
                          serializedName: minBackupRetentionDays
                          language: !<!Languages> 
                            default:
                              name: minBackupRetentionDays
                              description: Minimum Backup retention in days for the performance tier edition
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_24
                          serializedName: maxStorageMB
                          language: !<!Languages> 
                            default:
                              name: maxStorageMB
                              description: Max storage allowed for a server.
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: *ref_24
                          serializedName: minStorageMB
                          language: !<!Languages> 
                            default:
                              name: minStorageMB
                              description: Max storage allowed for a server.
                          protocol: !<!Protocols> {}
                      serializationFormats:
                        - json
                      usage:
                        - output
                      language: !<!Languages> 
                        default:
                          name: PerformanceTierServiceLevelObjectives
                          description: Service level objectives for performance tier.
                          namespace: ''
                      protocol: !<!Protocols> {}
                    language: !<!Languages> 
                      default:
                        name: PerformanceTierPropertiesServiceLevelObjectives
                        description: Service level objectives associated with the performance tier
                    protocol: !<!Protocols> {}
                  serializedName: serviceLevelObjectives
                  language: !<!Languages> 
                    default:
                      name: serviceLevelObjectives
                      description: Service level objectives associated with the performance tier
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: PerformanceTierProperties
                  description: Performance tier properties
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: PerformanceTierListResultValue
                description: The list of performance tiers
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of performance tiers
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: PerformanceTierListResult
          description: A list of performance tiers.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_95
    - *ref_96
    - !<!ObjectSchema> &ref_205
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: *ref_97
          required: true
          serializedName: name
          language: !<!Languages> 
            default:
              name: name
              description: Resource name to verify.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_98
          required: false
          serializedName: type
          language: !<!Languages> 
            default:
              name: type
              description: Resource type used for verification.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: NameAvailabilityRequest
          description: Request from client to check resource name availability.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_207
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: *ref_99
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: Error Message.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_100
          serializedName: nameAvailable
          language: !<!Languages> 
            default:
              name: nameAvailable
              description: Indicates whether the resource name is available.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_101
          serializedName: reason
          language: !<!Languages> 
            default:
              name: reason
              description: Reason for name being unavailable.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: NameAvailability
          description: Represents a resource name availability.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_64
    - !<!ObjectSchema> &ref_216
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '2017-12-01'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_123
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '2017-12-01'
            elementType: !<!ObjectSchema> &ref_109
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '2017-12-01'
              properties:
                - !<!Property> 
                  schema: *ref_102
                  readOnly: true
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: The name of the operation being performed on this particular object.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_110
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '2017-12-01'
                    properties:
                      - !<!Property> 
                        schema: *ref_103
                        readOnly: true
                        serializedName: provider
                        language: !<!Languages> 
                          default:
                            name: provider
                            description: Operation resource provider name.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_104
                        readOnly: true
                        serializedName: resource
                        language: !<!Languages> 
                          default:
                            name: resource
                            description: Resource on which the operation is performed.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_105
                        readOnly: true
                        serializedName: operation
                        language: !<!Languages> 
                          default:
                            name: operation
                            description: Localized friendly name for the operation.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_106
                        readOnly: true
                        serializedName: description
                        language: !<!Languages> 
                          default:
                            name: description
                            description: Operation description.
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                    language: !<!Languages> 
                      default:
                        name: OperationDisplay
                        description: Display metadata associated with the operation.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  readOnly: true
                  serializedName: display
                  language: !<!Languages> 
                    default:
                      name: display
                      description: The localized display information for this particular operation or action.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_107
                  readOnly: true
                  serializedName: origin
                  language: !<!Languages> 
                    default:
                      name: origin
                      description: The intended executor of the operation.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_108
                  readOnly: true
                  serializedName: properties
                  extensions:
                    x-ms-client-flatten: false
                  language: !<!Languages> 
                    default:
                      name: properties
                      description: Additional descriptions for the operation.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: Operation
                  description: REST API operation definition.
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: OperationListResultValue
                description: The list of resource provider operations.
            protocol: !<!Protocols> {}
          serializedName: value
          language: !<!Languages> 
            default:
              name: value
              description: The list of resource provider operations.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: OperationListResult
          description: A list of resource provider operations.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_109
    - *ref_110
    - *ref_15
    - *ref_16
    - *ref_17
    - *ref_18
    - *ref_65
  arrays:
    - *ref_111
    - *ref_112
    - *ref_113
    - *ref_114
    - *ref_115
    - *ref_116
    - *ref_117
    - *ref_118
    - *ref_119
    - *ref_120
    - *ref_121
    - *ref_122
    - *ref_123
globalParameters:
  - !<!Parameter> &ref_128
    schema: *ref_124
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !<!Languages> 
      default:
        name: SubscriptionId
        description: The ID of the target subscription.
        serializedName: subscriptionId
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: path
  - !<!Parameter> &ref_126
    schema: *ref_0
    clientDefaultValue: 'https://management.azure.com'
    implementation: Client
    origin: 'modelerfour:synthesized/host'
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !<!Languages> 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
  - !<!Parameter> &ref_127
    schema: *ref_125
    implementation: Client
    origin: 'modelerfour:synthesized/api-version'
    required: true
    language: !<!Languages> 
      default:
        name: apiVersion
        description: Api Version
        serializedName: api-version
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: query
operationGroups:
  - !<!OperationGroup> 
    $key: Servers
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_134
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_135
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_133
                schema: *ref_131
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The required parameters for creating or updating a server.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_133
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_134
          - *ref_135
        responses:
          - !<!SchemaResponse> 
            schema: *ref_31
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_31
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Create
            description: Creates a new server or updates an existing server. The update action will overwrite the existing server.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_138
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_139
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_137
                schema: *ref_136
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The required parameters for updating a server.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_137
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}'
                method: patch
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_138
          - *ref_139
        responses:
          - !<!SchemaResponse> 
            schema: *ref_31
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Update
            description: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_140
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_141
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_140
          - *ref_141
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Delete
            description: Deletes a server.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_142
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_143
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_142
          - *ref_143
        responses:
          - !<!SchemaResponse> 
            schema: *ref_31
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: Get
            description: Gets information about a server.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_144
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_144
        responses:
          - !<!SchemaResponse> 
            schema: *ref_145
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: ListByResourceGroup
            description: List all the servers in a given resource group.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/servers'
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_145
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: List
            description: List all the servers in a given subscription.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_146
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_147
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/restart'
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_146
          - *ref_147
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_148
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Restart
            description: Restarts a server.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Servers
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: Replicas
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_149
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_150
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/replicas'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_149
          - *ref_150
        responses:
          - !<!SchemaResponse> 
            schema: *ref_145
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: ListByServer
            description: List all the replicas for a given server.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Replicas
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: FirewallRules
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_152
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_153
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_154
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: firewallRuleName
                description: The name of the server firewall rule.
                serializedName: firewallRuleName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_151
                schema: *ref_59
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The required parameters for creating or updating a firewall rule.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_151
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_152
          - *ref_153
          - *ref_154
        responses:
          - !<!SchemaResponse> 
            schema: *ref_59
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_59
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: CreateOrUpdate
            description: Creates a new firewall rule or updates an existing firewall rule.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_155
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_156
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_157
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: firewallRuleName
                description: The name of the server firewall rule.
                serializedName: firewallRuleName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_155
          - *ref_156
          - *ref_157
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Delete
            description: Deletes a server firewall rule.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_158
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_159
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_160
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: firewallRuleName
                description: The name of the server firewall rule.
                serializedName: firewallRuleName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules/{firewallRuleName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_158
          - *ref_159
          - *ref_160
        responses:
          - !<!SchemaResponse> 
            schema: *ref_59
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: Get
            description: Gets information about a server firewall rule.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_161
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_162
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/firewallRules'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_161
          - *ref_162
        responses:
          - !<!SchemaResponse> 
            schema: *ref_163
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: ListByServer
            description: List all the firewall rules in a given server.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: FirewallRules
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: VirtualNetworkRules
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - !<!Parameter> &ref_164
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_165
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_128
          - *ref_127
          - !<!Parameter> &ref_166
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: virtualNetworkRuleName
                description: The name of the virtual network rule.
                serializedName: virtualNetworkRuleName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_164
          - *ref_165
          - *ref_166
        responses:
          - !<!SchemaResponse> 
            schema: *ref_60
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: Get
            description: Gets a virtual network rule.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - !<!Parameter> &ref_168
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_169
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_128
          - *ref_127
          - !<!Parameter> &ref_170
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: virtualNetworkRuleName
                description: The name of the virtual network rule.
                serializedName: virtualNetworkRuleName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_167
                schema: *ref_60
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The requested virtual Network Rule Resource state.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_167
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_168
          - *ref_169
          - *ref_170
        responses:
          - !<!SchemaResponse> 
            schema: *ref_60
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_60
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: CreateOrUpdate
            description: Creates or updates an existing virtual network rule.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - !<!Parameter> &ref_171
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_172
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_173
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: virtualNetworkRuleName
                description: The name of the virtual network rule.
                serializedName: virtualNetworkRuleName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_128
          - *ref_127
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_171
          - *ref_172
          - *ref_173
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Delete
            description: Deletes the virtual network rule with the given name.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - !<!Parameter> &ref_174
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_175
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_128
          - *ref_127
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/virtualNetworkRules'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_174
          - *ref_175
        responses:
          - !<!SchemaResponse> 
            schema: *ref_176
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        extensions:
          x-ms-pageable:
            nextLinkName: nextLink
        language: !<!Languages> 
          default:
            name: ListByServer
            description: Gets a list of virtual network rules in a server.
            paging:
              nextLinkName: nextLink
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: VirtualNetworkRules
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: Databases
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_178
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_179
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_180
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: databaseName
                description: The name of the database.
                serializedName: databaseName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_177
                schema: *ref_61
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The required parameters for creating or updating a database.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_177
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_178
          - *ref_179
          - *ref_180
        responses:
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: CreateOrUpdate
            description: Creates a new database or updates an existing database.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_181
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_182
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_183
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: databaseName
                description: The name of the database.
                serializedName: databaseName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_181
          - *ref_182
          - *ref_183
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '204'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: Delete
            description: Deletes a database.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_184
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_185
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_186
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: databaseName
                description: The name of the database.
                serializedName: databaseName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases/{databaseName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_184
          - *ref_185
          - *ref_186
        responses:
          - !<!SchemaResponse> 
            schema: *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: Get
            description: Gets information about a database.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_187
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_188
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/databases'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_187
          - *ref_188
        responses:
          - !<!SchemaResponse> 
            schema: *ref_189
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: ListByServer
            description: List all the databases in a given server.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Databases
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: Configurations
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_191
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_192
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_193
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: configurationName
                description: The name of the server configuration.
                serializedName: configurationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_190
                schema: *ref_62
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The required parameters for updating a server configuration.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_190
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_191
          - *ref_192
          - *ref_193
        responses:
          - !<!SchemaResponse> 
            schema: *ref_62
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: CreateOrUpdate
            description: Updates a configuration of a server.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_194
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_195
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_196
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: configurationName
                description: The name of the server configuration.
                serializedName: configurationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations/{configurationName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_194
          - *ref_195
          - *ref_196
        responses:
          - !<!SchemaResponse> 
            schema: *ref_62
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: Get
            description: Gets information about a configuration of server.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_197
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_198
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/configurations'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_197
          - *ref_198
        responses:
          - !<!SchemaResponse> 
            schema: *ref_199
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: ListByServer
            description: List all the configurations in a given server.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Configurations
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: LogFiles
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_200
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_201
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/logFiles'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_200
          - *ref_201
        responses:
          - !<!SchemaResponse> 
            schema: *ref_202
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: ListByServer
            description: List all the log files in a given server.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: LogFiles
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: LocationBasedPerformanceTier
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
          - !<!Parameter> &ref_203
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: locationName
                description: The name of the location.
                serializedName: locationName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/performanceTiers'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_203
        responses:
          - !<!SchemaResponse> 
            schema: *ref_204
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        extensions:
          x-ms-pageable:
            nextLinkName: null
        language: !<!Languages> 
          default:
            name: List
            description: List all the performance tiers at specified location in a given subscription.
            paging:
              nextLinkName: null
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: LocationBasedPerformanceTier
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: CheckNameAvailability
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
          - *ref_128
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_206
                schema: *ref_205
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: nameAvailabilityRequest
                    description: The required parameters for checking if resource name is available.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_206
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability'
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_207
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: Execute
            description: Check the availability of name for resource
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: CheckNameAvailability
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: ServerSecurityAlertPolicies
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - !<!Parameter> &ref_209
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_210
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_211
            schema: *ref_208
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: securityAlertPolicyName
                description: The name of the security alert policy.
                serializedName: securityAlertPolicyName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_128
          - *ref_127
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_209
          - *ref_210
          - *ref_211
        responses:
          - !<!SchemaResponse> 
            schema: *ref_64
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: Get
            description: Get a server's security alert policy.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - !<!Parameter> &ref_213
            schema: *ref_129
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: resourceGroupName
                description: The name of the resource group. The name is case insensitive.
                serializedName: resourceGroupName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_214
            schema: *ref_1
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: serverName
                description: The name of the server.
                serializedName: serverName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_215
            schema: *ref_208
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: securityAlertPolicyName
                description: The name of the threat detection policy.
                serializedName: securityAlertPolicyName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - *ref_128
          - *ref_127
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_130
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_212
                schema: *ref_64
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: parameters
                    description: The server security alert policy.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_212
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_213
          - *ref_214
          - *ref_215
        responses:
          - !<!SchemaResponse> 
            schema: *ref_64
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '202'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        extensions:
          x-ms-long-running-operation: true
        language: !<!Languages> 
          default:
            name: CreateOrUpdate
            description: Creates or updates a threat detection policy.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ServerSecurityAlertPolicies
        description: ''
    protocol: !<!Protocols> {}
  - !<!OperationGroup> 
    $key: Operations
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '2017-12-01'
        parameters:
          - *ref_126
          - *ref_127
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_132
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /providers/Microsoft.DBforMySQL/operations
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_216
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: List
            description: Lists all of the available REST API operations.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: Operations
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: true
language: !<!Languages> 
  default:
    name: MySQLManagementClient
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
