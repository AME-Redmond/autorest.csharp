{
    "swagger": "2.0",
    "info": {
        "title": "ExactMatchInheritance",
        "version": "2020-06-01"
    },
    "host": "management.azure.com",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "security": [
        {
            "azure_auth": [
                "user_impersonation"
            ]
        }
    ],
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "flow": "implicit",
            "description": "Azure Active Directory OAuth2 Flow",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            }
        }
    },
    "paths": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Billing/policies/default": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "operationId": "Policies_GetByBillingProfile",
                "description": "Singleton Test Example",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded.",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Policies"
                ],
                "operationId": "Policies_Update",
                "description": "Updates the singleton policies",
                "parameters": [
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        },
                        "description": "Request parameters that are provided to the update policies operation."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded.",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Resource": {
            "description": "The Resource model definition.",
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource Id."
                },
                "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource name."
                },
                "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Resource type."
                }
            },
            "x-ms-azure-resource": true
        },
        "TrackedResource": {
            "title": "Tracked Resource",
            "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
            "properties": {
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                    ],
                    "description": "Resource tags."
                },
                "location": {
                    "type": "string",
                    "x-ms-mutability": [
                        "read",
                        "create"
                    ],
                    "description": "The geo-location where the resource lives"
                }
            },
            "required": [
                "location"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ]
        },
        "Policy": {
            "description": "A singleton resource.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "x-ms-client-flatten": true,
                    "$ref": "#/definitions/PolicyProperties",
                    "title": "Policy properties"
                }
            }
        },
        "PolicyProperties": {
            "description": "The properties of a policy.",
            "properties": {
                "marketplacePurchases": {
                    "description": "The policy that controls whether Azure marketplace purchases are allowed for a billing profile.",
                    "type": "string",
                    "enum": [
                        "AllAllowed",
                        "OnlyFreeAllowed",
                        "NotAllowed"
                    ],
                    "x-ms-enum": {
                        "name": "MarketplacePurchasesPolicy",
                        "modelAsString": true
                    }
                },
                "reservationPurchases": {
                    "description": "The policy that controls whether Azure reservation purchases are allowed for a billing profile.",
                    "type": "string",
                    "enum": [
                        "Allowed",
                        "NotAllowed"
                    ],
                    "x-ms-enum": {
                        "name": "ReservationPurchasesPolicy",
                        "modelAsString": true
                    }
                },
                "viewCharges": {
                    "description": "The policy that controls whether users with Azure RBAC access to a subscription can view its charges.",
                    "type": "string",
                    "enum": [
                        "Allowed",
                        "NotAllowed"
                    ],
                    "x-ms-enum": {
                        "name": "ViewChargesPolicy",
                        "modelAsString": true
                    }
                }
            }
        },
        "ErrorResponse": {
            "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
            "type": "object",
            "properties": {
                "error": {
                    "description": "The details of the error.",
                    "$ref": "#/definitions/ErrorDetails"
                }
            }
        },
        "ErrorDetails": {
            "description": "The details of the error.",
            "properties": {
                "code": {
                    "description": "Error code.",
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "description": "Error message indicating why the operation failed.",
                    "type": "string",
                    "readOnly": true
                },
                "target": {
                    "description": "The target of the particular error.",
                    "type": "string",
                    "readOnly": true
                },
                "details": {
                    "description": "The sub details of the error.",
                    "readOnly": true,
                    "$ref": "#/definitions/ErrorSubDetails"
                }
            }
        },
        "ErrorSubDetails": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Error code.",
                        "type": "string",
                        "readOnly": true
                    },
                    "message": {
                        "description": "Error message indicating why the operation failed.",
                        "type": "string",
                        "readOnly": true
                    },
                    "target": {
                        "description": "The target of the particular error.",
                        "type": "string",
                        "readOnly": true
                    }
                }
            }
        }
    },
    "parameters": {
        "SubscriptionIdParameter": {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "ResourceGroupNameParameter": {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "ApiVersionParameter": {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
        }
    }
}
